"
" -- VIM configuration --
"

" Vundle setup
filetype off
set runtimepath+=~/.vim/bundle/Vundle.vim
call vundle#rc()

" Manage Vundle with Vundle
Bundle 'VundleVim/Vundle.vim'

" Plugins
Bundle 'mileszs/ack.vim'
Bundle 'kien/ctrlp.vim'
Bundle 'editorconfig/editorconfig-vim'
Bundle 'tpope/vim-fugitive'
Bundle 'vim-scripts/indentpython.vim'
Bundle 'edsono/vim-matchit'
Bundle 'scrooloose/nerdcommenter'
Bundle 'scrooloose/nerdtree'
Bundle 'msanders/snipmate.vim'
Bundle 'godlygeek/tabular'
Bundle 'vim-airline/vim-airline'
Bundle 'vim-ruby/vim-ruby'
Bundle 'rodjek/vim-puppet'
Plugin 'fatih/vim-go'
Plugin 'chase/vim-ansible-yaml'

" Color schemas
Bundle 'brafales/vim-desert256'

set t_Co=256
set background=dark
colorscheme desert256

syntax on
filetype plugin on
filetype plugin indent on

set modeline
set backspace=2
set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab
set showcmd
set showmatch
set hlsearch
set incsearch
set ignorecase
set smartcase
set autoindent
set title
set foldmethod=indent
set foldlevel=99
set laststatus=2

set encoding=utf8
set spelllang=pl

set backupdir=~/.vim/backups
set backup

au BufNewFile *.py   so ~/.vim/templates/tpl.py
au BufNewFile *.php  so ~/.vim/templates/tpl.php
au BufRead mutt-* setlocal spell spelllang=pl
au BufRead *.tex setlocal spell spelllang=pl
au BufRead *.twig   set ft=html
au BufRead *.txt set tw=78

" jump to the last position when  reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

map <C-J> :bnext<CR>
map <C-K> :bprev<CR>
map <C-L> :tabn<CR>
map <C-H> :tabp<CR>

let NERDTreeKeepTreeInNewTab=1

nmap <leader>t :NERDTreeToggle<CR>
nnoremap <Leader>rtw :%s/\s\+$//e<CR>

let g:ackprg="ack-grep -H --nocolor --nogroup --column"

let g:airline#extensions#tabline#show_buffers = 0
let g:airline#extensions#tabline#show_tabs = 0
let g:airline#extensions#tabline#enabled = 1
let g:airline_left_sep = ''
let g:airline_right_sep = ''

let g:ctrlp_extensions = ['tag']

